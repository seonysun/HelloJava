/*
 * 2. 인터페이스
 * 	- 추상 클래스의 일종 -> 추상 클래스 보완(다중 상속)
 * 	- interface 인터페이스명{ 변수, 메소드 }
 * 	- 상속 : interface 자손인터페이스명 extends 조상인터페이스명{}
 * 	- 구현 : class 클래스명 implements 인터페이스명{}
 * 
 * 	1) 조건 
 * 		- 모든 멤버변수 : 상수 -> public static final 생략 가능
 * 		- 모든 메소드 : 추상메소드 -> public abstract 생략 가능
 * 								//클래스에서 구현(오버라이딩) 시에는 public 필수(접근제어자 축소 불가) 
 * 			cf. jdk1.8부터 static, default 메소드(구현메소드) 추가 가능
 * 
 * 	2) 장점
 * 		- 다중 상속
 * 		- 프로그램 제작 시 기본틀 형성 -> 표준화 -> 라이브러리
 * 		- 관계없는 클래스 서로 연결해서 사용
 * 		- 독립적인 프로그래밍(결합성 낮은 프로그램) -> 클래스 수정 시 다른 클래스에 영향 적음
 *   	- 다형성 : 인스턴스명 참조변수명 = new 구현클래스명();
 */

public class 인터페이스 {

}
